{"version":3,"sources":["functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoContainer.js","index.js","functionBased/components/TodoItem.module.css"],"names":["TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","style","checkbox","checked","onChange","handleChangeProps","type","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","textDecoration","value","e","setUpdate","target","onKeyDown","event","key","textInput","TodosList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","size","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a060e0cf.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\nconst TodoItem = props =>{\r\n\r\n  const [editing, setEditing] = useState(false); \r\n\r\n  const handleEditing = () => {\r\n    setEditing(true);\r\n  }\r\n   \r\n  const handleUpdatedDone = event => {\r\n    if(event.key === \"Enter\"){\r\n      setEditing(false);\r\n    }\r\n  }\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n  const {completed, id, title} = props.todo;\r\n        let viewMode = {}\r\n        let editMode = {}\r\n        if (editing) {\r\n          viewMode.display = \"none\"\r\n        } else {\r\n          editMode.display = \"none\"\r\n        }\r\n        \r\nuseEffect(() => {\r\n  return () => {\r\n    console.log('cleaning...');\r\n  }\r\n},[]);\r\n\r\n        return (\r\n            <li  className={styles.item}>\r\n        <div onDoubleClick={handleEditing}  style={viewMode}>\r\n        <input\r\n        className={styles.checkbox}\r\n        checked={completed}\r\n        onChange={()=> props.handleChangeProps(id)} \r\n        type=\"checkbox\" />\r\n        <button onClick={() => props.deleteTodoProps(id)} > \r\n        <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\r\n        </button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n        </div>\r\n        <input type=\"text\" style={editMode} value={title} \r\n        onChange={e => { \r\n            props.setUpdate(e.target.value, id)\r\n        }} \r\n        onKeyDown={handleUpdatedDone}\r\n        className={styles.textInput} />\r\n    </li>\r\n        );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  export default TodoItem\r\n\r\n","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nconst TodosList = props => {\r\n  return (\r\n    <ul>\r\n      {props.todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n          setUpdate={props.setUpdate}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\nexport default TodosList","import React from \"react\"\r\n\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1  \r\n      style={{\r\n        fontSize: \"6rem\",\r\n        fontWeight: \"600\",\r\n        marginBottom: \"2rem\",\r\n        lineHeight: \"1em\",\r\n        color: \"#ececec\",\r\n        textTransform: \"lowercase\",\r\n        textAlign: \"center\",\r\n      }}\r\n      >todos</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\nconst InputTodo = props => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  })\r\n\r\n  const onChange = e => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputText.title.trim()) {\r\n      props.addTodoProps(inputText.title)\r\n      setInputText({\r\n        title: \"\",\r\n      })\r\n    } else {\r\n      alert(\"Please write item\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <button className=\"input-submit\">\r\n      <FaPlusCircle color=\"darkcyan\" size=\"20px\" className=\"submit-icon\" />\r\n       </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect } from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\"\r\nimport About from \"./About\"\r\nimport NotMatch from \"./NotMatch\"\r\n\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nconst TodoContainer = () => {\r\n  const [todos,setTodos] = useState(getInitialTodos());\r\n\r\n  const handleChange = id => {\r\n    setTodos(prevState => prevState.map(todo => {\r\n      if (todo.id === id) {\r\n        return {...todo,completed: !todo.completed,}\r\n      }\r\n      return todo\r\n    }))\r\n  }\r\n\r\n  const delTodo = id => {\r\n      setTodos([...todos.filter(todo => { return todo.id !== id })])\r\n  }\r\n  const addTodoItem = title =>{\r\n    const newTodo = {\r\n      id:uuidv4(),\r\n      title:title,\r\n      completed:false\r\n    };\r\n    setTodos([...todos,newTodo])\r\n  }\r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if(todo.id === id){\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n  function getInitialTodos() {\r\n    // getting stored items\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const savedTodos = JSON.parse(temp)\r\n    return savedTodos || []\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(\"test run\")\r\n  \r\n  //   // getting stored items\r\n  //   const temp = localStorage.getItem(\"todos\")\r\n  //   const loadedTodos = JSON.parse(temp)\r\n  \r\n  //   if (loadedTodos) {\r\n  //     setTodos(loadedTodos)\r\n  //   }\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    // storing todos items\r\n    const temp = JSON.stringify(todos)\r\n    localStorage.setItem(\"todos\", temp)\r\n  }, [todos])\r\n\r\n\r\n  return (\r\n    <>\r\n     <div className=\"container\">\r\n   \r\n   <div className=\"inner\">\r\n     <Header />\r\n     <InputTodo addTodoProps={addTodoItem} />\r\n     <TodosList\r\n       todos={todos}\r\n       handleChangeProps={handleChange}\r\n       deleteTodoProps={delTodo}\r\n       setUpdate={setUpdate}\r\n     />\r\n   </div>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n//component file\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\r\n\r\nimport \"./functionBased/App.css\"\r\n\r\nReactDOM.render(\r\n<React.StrictMode>\r\n<Router>\r\n    <TodoContainer />\r\n</Router>\r\n</React.StrictMode>\r\n\r\n, document.getElementById(\"root\"))\r\n\r\n\r\n// const element = <h1>Hello from Create React App14</h1>\r\n\r\n// ReactDOM.render(element, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1WLjn\",\"checkbox\":\"TodoItem_checkbox__1AFzW\",\"textInput\":\"TodoItem_textInput__4NtOd\"};"],"sourceRoot":""}